{"version":3,"sources":["./src/app/registrar/registrar.page.html","./src/app/registrar/registrar.module.ts","./src/app/registrar/registrar.page.scss","./src/app/registrar/registrar.page.ts","./src/app/services/user/user.service.ts"],"names":[],"mappings":"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","file":"registrar-registrar-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Registrar-se</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"container\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"$event.preventDefault()\\\">\\r\\n    <p-panel header=\\\"Registro\\\">\\r\\n      <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\r\\n\\r\\n        <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            Email *:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            <input pInputText type=\\\"text\\\" formControlName=\\\"email\\\" placeholder=\\\"Required\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-4\\\">\\r\\n            <p-message severity=\\\"error\\\" text=\\\"Email inválido/Requerido\\\"\\r\\n              *ngIf=\\\"!formGroup.controls['email'].valid&&formGroup.controls['email'].dirty\\\"></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            Apelido (Nick) *:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            <input pInputText type=\\\"text\\\" formControlName=\\\"apelido\\\" placeholder=\\\"Required\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-4\\\">\\r\\n            <p-message severity=\\\"error\\\" text=\\\"Apelido deve conter entre 5 e 15 caracteres/Requerido\\\"\\r\\n              *ngIf=\\\"!formGroup.controls['apelido'].valid&&formGroup.controls['apelido'].dirty\\\"></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            Senha *:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            <input pInputText type=\\\"password\\\" formControlName=\\\"senha\\\" placeholder=\\\"Required\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-4\\\">\\r\\n            <p-message severity=\\\"error\\\" text=\\\"Senha deve conter pelo menos 8 caracteres/Requerida\\\"\\r\\n              *ngIf=\\\"!formGroup.controls['senha'].valid&&formGroup.controls['senha'].dirty\\\"></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            Repita sua Senha *:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            <input pInputText type=\\\"password\\\" formControlName=\\\"senhaR\\\" placeholder=\\\"Required\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-4\\\">\\r\\n            <p-message severity=\\\"error\\\" text=\\\"Senhas não são as mesmas\\\"\\r\\n              *ngIf=\\\"!getSenhas()\\\"></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-4\\\">\\r\\n            <button pButton type=\\\"submit\\\" label=\\\"Enviar\\\" [disabled]=\\\"getValid()\\\" (click)=\\\"registrar()\\\"></button>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-4\\\"></div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </p-panel>\\r\\n  </form>\\r\\n\\r\\n  <br><br>\\r\\n</ion-content>\\r\\n\\r\\n<app-load-spinner [loading]=\\\"loading\\\"></app-load-spinner>\\r\\n\\r\\n\\r\\n<app-footer></app-footer>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RegistrarPage } from './registrar.page';\r\nimport { LoadSpinnerModule } from '../components/utils/load-spinner/load-spinner.module';\r\nimport { FooterModule } from '../components/footer/footer.module';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MessageModule } from 'primeng/message';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistrarPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    LoadSpinnerModule,\r\n    FooterModule,\r\n    ToastModule,\r\n    InputTextareaModule,\r\n    ButtonModule,\r\n    TabViewModule,\r\n    PanelModule,\r\n    DropdownModule,\r\n    MessageModule,\r\n    LoadSpinnerModule,\r\n    FooterModule\r\n  ],\r\n  providers: [MessageService],\r\n  declarations: [RegistrarPage]\r\n})\r\nexport class RegistrarPageModule { }\r\n","module.exports = \".danger {\\n  color: red;\\n}\\n\\n.container {\\n  margin: 20px;\\n  max-width: 90%;\\n}\\n\\n.click:hover {\\n  cursor: pointer;\\n  color: #171d74;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmFyL0M6XFxVc2Vyc1xcbGhjY29cXERvY3VtZW50c1xcRGVzZW52b2x2aW1lbnRvXFxUQ0NcXEZyb250ZW5kXFxSTUYtTW9iaWxlL3NyY1xcYXBwXFxyZWdpc3RyYXJcXHJlZ2lzdHJhci5wYWdlLnNjc3MiLCJzcmMvYXBwL3JlZ2lzdHJhci9yZWdpc3RyYXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtFQUNBLGNBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7RUFDQSxjQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3RyYXIvcmVnaXN0cmFyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYW5nZXIge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIG1hcmdpbjogMjBweDtcclxuICBtYXgtd2lkdGg6IDkwJTtcclxufVxyXG5cclxuLmNsaWNrOmhvdmVyIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY29sb3I6IHJnYigyMywgMjksIDExNik7XHJcbn1cclxuXHJcbiIsIi5kYW5nZXIge1xuICBjb2xvcjogcmVkO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWFyZ2luOiAyMHB4O1xuICBtYXgtd2lkdGg6IDkwJTtcbn1cblxuLmNsaWNrOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogIzE3MWQ3NDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuController, AlertController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from '../services/user/user.service';\r\nimport { UserNewDTO } from '../models/user/user.new.dto';\r\n\r\n@Component({\r\n  selector: 'app-registrar',\r\n  templateUrl: './registrar.page.html',\r\n  styleUrls: ['./registrar.page.scss'],\r\n})\r\nexport class RegistrarPage implements OnInit {\r\n\r\n  formGroup: FormGroup;\r\n  user: UserNewDTO;\r\n\r\n  loading: boolean = false;\r\n\r\n  constructor(private router: Router,\r\n    private menu: MenuController,\r\n    public formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private alertCtrl: AlertController) {\r\n\r\n    this.formGroup = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      apelido: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]],\r\n      senha: ['', [Validators.required, Validators.minLength(8)]],\r\n      senhaR: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.menu.enable(false)\r\n  }\r\n\r\n  registrar() {\r\n    this.loading = true;\r\n    this.user = {\r\n      apelido: this.formGroup.get('apelido').value,\r\n      email: this.formGroup.get('email').value,\r\n      senha: this.formGroup.get('senha').value,\r\n    }\r\n    this.userService.insertNew(this.user).subscribe(res => {\r\n      this.loading = false;\r\n      this.showOk();\r\n    },\r\n      error => { this.loading = false });\r\n  }\r\n\r\n  async showOk() {\r\n    let alert = await this.alertCtrl.create(\r\n      {\r\n        header: 'Sucesso!',\r\n        message: 'Seu cadastro foi efetuado com sucesso!',\r\n        backdropDismiss: false,\r\n        buttons: [\r\n          {\r\n            text: 'OK',\r\n            handler: () => { this.router.navigateByUrl('login'); }\r\n          }\r\n        ]\r\n      }\r\n    );\r\n\r\n    alert.present();\r\n  }\r\n\r\n  getValid() {\r\n    return !(this.formGroup.valid && this.getSenhas());\r\n  }\r\n\r\n  getSenhas(){\r\n    return this.formGroup.get('senha').value == this.formGroup.get('senhaR').value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserDTO } from 'src/app/models/Mesa/user.dto';\r\nimport { API_CONFIG } from 'src/app/config/api.config';\r\nimport { StorageService } from '../storage-service.service';\r\nimport { UserNewDTO } from 'src/app/models/user/user.new.dto';\r\nimport { UserUpdateImgDTO } from 'src/app/models/user/user-update-img.dto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(public http: HttpClient, public storage: StorageService) { }\r\n\r\n  findByEmail(email: string): Observable<any> {\r\n    return this.http.get<UserDTO>(\r\n      `${API_CONFIG.baseUrl}users/${email}`)\r\n  }\r\n\r\n  findById(id: string): Observable<any> {\r\n    return this.http.get(\r\n      `${API_CONFIG.baseUrl}users/id/${id}`)\r\n  }\r\n\r\n  insertNew(obj: UserNewDTO): Observable<any> {\r\n    return this.http.post(`${API_CONFIG.baseUrl}users`,\r\n      obj);\r\n  }\r\n\r\n  updateImgUser(dto: UserUpdateImgDTO): Observable<any> {\r\n    return this.http.patch(`${API_CONFIG.baseUrl}users`,\r\n      dto,\r\n      {\r\n        responseType: 'json',\r\n        observe: 'response'\r\n      })\r\n  }\r\n}\r\n"],"sourceRoot":""}